{"version":3,"sources":["page/Graph.js","page/Insta.js","page/Biyong.js","page/Biyongop.js","page/Chuihyung.js","page/Gilcuchun.js","page/Action.js","page/Map.js","page/Login.js","page/Join.js","page/Header.js","tem/Front.js","tem/Main.js","App.js","serviceWorker.js","index.js","json/dong1.geojson"],"names":["Graph","dong","fa","useState","graphop","setList","datat","setDatat","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","listset","totaldata","a","dataset3","post","bub","fetch","method","headers","body","JSON","stringify","then","response","json","message","push","max","maxname","maxtitle","gun","length","zip","gu","sung","console","log","backcol","i","sang","score","palete","datatools","dataz","backcolz","q","j","devtools","useEffect","className","width","height","options","title","display","fontSize","scales","xAxes","stacked","yAxes","ticks","min","stepSize","legend","position","insta","json1","words","setWords","date1","setDate1","date2","setDate2","jsondata","setJsondata","setLoad","diningcode","setDiningcode","hoverBackgroundColor","setData","setjson","word","Axios","diningdate","res","dining","e","target","value","substring","alert","undefined","tempLabels","tempDatasets","tempDatasetbackcol","status","tag","count","produce","draft","error","makedata","onChange","map","index","key","onClick","text","Biyong","g","setG","b","setB","d","setD","setI","build","setBuild","inte","setInte","sul","setSul","ga","setGa","gita","setGita","chong","setChong","year","setYear","month","setMonth","ingun","setIngun","zeryo","setZeryo","gita2","setGita2","danga","setDanga","type","name","colSpan","id","window","sessionStorage","getItem","menth","location","replace","Biyongop","setJson1","ma2019","setMa2019","ma2020","setMa2020","ma20192","setMa20192","ma20202","setMa20202","dan","setDan","bi","setBi","bi1","setBi1","bi12","setBi12","key1","gil","hap2","hap1","hap12","월별2019매출예측","월별2020매출예측","월별2019매출예측2","월별2020매출예측2","gilst","parseInt","Chuihyung","setDong1","chuidata","setChuidata","setGil","gillist","setGillist","makejson1","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","gillistset","list","상권_코드_명","기준_년_코드","기준_분기_코드","분기별_매출","gill","Gilcuchun","makelist","class","coffee평균매출","Action","graphstate","setGraphstate","instastate","setInstastate","chui","setChui","biyong","setBiyong","setJson","setGilst","gildata","isdong","chuist","instast","get","biyongsta","dabongsta","Insta","Map","setDong","setFa","fanum","Object","btn1","setBtn1","btn2","setBtn2","btn3","setBtn3","btn4","setBtn4","btn5","setBtn5","btn6","setBtn6","btn7","setBtn7","btn8","setBtn8","btn9","setBtn9","btn10","setBtn10","script","document","createElement","async","src","head","appendChild","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","customOverlay","CustomOverlay","$","getJSON","geojson","features","coordinates","each","val","geometry","properties","SIG_CD","EMD_KOR_NM","sig_cd","path","points","coordinate","point","x","y","fillColor","polygon","Polygon","strokeWeight","strokeColor","strokeOpacity","fillOpacity","polygons","event","addListener","mouseEvent","setOptions","setContent","setPosition","latLng","setMap","displayArea","josndatamake","classes","charset","parse","onsel1","fa1","onsel2","onsel3","onsel4","onsel5","onsel6","onsel7","onsel8","onsel9","onsel10","Login","Loginstate","setId","pw","setPw","placeholder","setItem","Join","idcheck","setIdcheck","repw","setRepw","setName","age","setAge","checkmessage","setCheckMessage","Header","loginstate","setLoginstate","joinstate","setJoinstate","header","setHeader","biyongst","setBiyongst","onclick3","removeItem","Front","Main","props","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.5d3082d1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Axios from \"axios\";\r\nimport { produce } from \"immer\";\r\n\r\nfunction Graph(dong, fa) {\r\n  const [graphop, setGraphop] = useState(\"\");\r\n  const [list, setList] = useState(\"\");\r\n  const [dong1, setDong1] = useState(dong.dong);\r\n  const [datat, setDatat] = useState();\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: [],\r\n        backgroundColor: [],\r\n        borderColor: [],\r\n        borderWidth: 2,\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n  let listset = [];\r\n  let jsondata = [];\r\n  const totaldata = async () => {\r\n    const dataset3 = [];\r\n    const post = {\r\n      bub: dong.dong,\r\n    };\r\n    try {\r\n      let devtools;\r\n      await fetch(\"/api/graph\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then(response => response.json())\r\n        .then(message => {\r\n          setList(message);\r\n          listset.push(message);\r\n        });\r\n\r\n      let max = 0;\r\n      let maxname = [];\r\n      let maxtitle = \"\";\r\n      if (listset[0].gun.length < listset[0].zip.length) {\r\n        max = listset[0].zip.length;\r\n        maxname = listset[0].zip;\r\n        maxtitle = \"집객력\";\r\n      } else {\r\n        max = listset[0].gun.length;\r\n        maxname = listset[0].gun;\r\n        maxtitle = \"상권지표\";\r\n      }\r\n      if (max < listset[0].gu.length) {\r\n        max = listset[0].gu.length;\r\n        maxname = listset[0].gu;\r\n        maxtitle = \"구매력\";\r\n      }\r\n      if (max < listset[0].sung.length) {\r\n        max = listset[0].sung.length;\r\n        maxname = listset[0].sung;\r\n        maxtitle = \"성장성\";\r\n      }\r\n      console.log(listset[0]);\r\n      console.log(maxtitle);\r\n      console.log(maxname);\r\n      console.log(max);\r\n\r\n      let labels = [];\r\n      let label = \"\";\r\n      let data = [];\r\n      let backcol = [];\r\n      for (let i = 0; i < maxname.length; i++) {\r\n        label = maxtitle;\r\n        labels.push(maxname[i].sang);\r\n        data.push(maxname[i].score);\r\n        backcol.push(palete[0]);\r\n      }\r\n      let datatools = {\r\n        label: maxtitle,\r\n        data: data,\r\n        backgroundColor: backcol,\r\n      };\r\n      dataset3.push(datatools);\r\n      let dataz = [];\r\n      let backcolz = [];\r\n      let k = 0;\r\n\r\n      if (JSON.stringify(listset[0].zip) !== JSON.stringify(maxname)) {\r\n        dataz = [];\r\n        backcolz = [];\r\n        label = \"집객력\";\r\n\r\n        k = 0;\r\n        for (let q = 0; q < max; q++) {\r\n          for (let j = 0; j < listset[0].zip.length; j++) {\r\n            if (listset[0].zip[j].sang === labels[q]) {\r\n              console.log(listset[0].zip[j].sang + \" @ \" + labels[q]);\r\n              dataz.push(listset[0].zip[j].score);\r\n              console.log(dataz);\r\n              break;\r\n            }\r\n            if (\r\n              j === listset[0].zip.length - 1 &&\r\n              listset[0].zip[j].sang !== labels[q]\r\n            ) {\r\n              dataz.push(0);\r\n            }\r\n          }\r\n\r\n          backcolz.push(palete[1]);\r\n        }\r\n        devtools = {\r\n          label: label,\r\n          data: dataz,\r\n          backgroundColor: backcolz,\r\n        };\r\n        dataset3.push(devtools);\r\n      }\r\n\r\n      if (JSON.stringify(listset[0].gun) !== JSON.stringify(maxname)) {\r\n        dataz = [];\r\n        backcolz = [];\r\n\r\n        k = 0;\r\n        label = \"상권지표\";\r\n        for (let j = 0; j < listset[0].gun.length; j++) {\r\n          for (let q = 0; q < max; q++) {\r\n            if (listset[0].gun[j].sang !== labels[q]) {\r\n            } else {\r\n              dataz.push(listset[0].gun[j].score);\r\n\r\n              break;\r\n            }\r\n            if (q === max - 1 && listset[0].gun[j].sang !== labels[q]) {\r\n              dataz.push(0);\r\n              j--;\r\n            }\r\n          }\r\n\r\n          backcolz.push(palete[2]);\r\n        }\r\n        devtools = {\r\n          label: label,\r\n          data: dataz,\r\n          backgroundColor: backcolz,\r\n        };\r\n        dataset3.push(devtools);\r\n      }\r\n\r\n      if (JSON.stringify(listset[0].gu) !== JSON.stringify(maxname)) {\r\n        label = \"구매력\";\r\n        dataz = [];\r\n        backcolz = [];\r\n        k = 0;\r\n        for (let j = 0; j < listset[0].gu.length; j++) {\r\n          for (let q = 0; q < max; q++) {\r\n            if (listset[0].gu[j].sang !== labels[q]) {\r\n            } else {\r\n              dataz.push(listset[0].gu[j].score);\r\n\r\n              break;\r\n            }\r\n            if (q === max - 1 && listset[0].gu[j].sang !== labels[q]) {\r\n              dataz.push(0);\r\n              j--;\r\n            }\r\n          }\r\n\r\n          backcolz.push(palete[3]);\r\n        }\r\n        devtools = {\r\n          label: label,\r\n          data: dataz,\r\n          backgroundColor: backcolz,\r\n        };\r\n        dataset3.push(devtools);\r\n      }\r\n\r\n      if (JSON.stringify(listset[0].sung) !== JSON.stringify(maxname)) {\r\n        label = \"성장성\";\r\n        dataz = [];\r\n        backcolz = [];\r\n        k = 0;\r\n        for (let j = 0; j < listset[0].sung.length; j++) {\r\n          for (let q = 0; q < max; q++) {\r\n            if (listset[0].sung[j].sang !== labels[q]) {\r\n            } else {\r\n              dataz.push(listset[0].sung[j].score);\r\n              break;\r\n            }\r\n            if (q === max - 1 && listset[0].sung[j].sang !== labels[q]) {\r\n              dataz.push(0);\r\n              j--;\r\n            }\r\n          }\r\n\r\n          backcolz.push(palete[4]);\r\n        }\r\n\r\n        devtools = {\r\n          label: label,\r\n          data: dataz,\r\n          backgroundColor: backcolz,\r\n        };\r\n        dataset3.push(devtools);\r\n      }\r\n\r\n      let final = { labels: labels, datasets: dataset3 };\r\n      setDatat(final);\r\n      console.log(dataset3);\r\n      console.log(datat);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  async function makeData() {\r\n    const post = {\r\n      bub: dong.dong,\r\n    };\r\n    try {\r\n      await fetch(\"/api/graph\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then(response => response.json())\r\n        .then(message => {\r\n          console.log(message);\r\n          console.log(message.gu[0].sang);\r\n          setList(message);\r\n          listset.push(message);\r\n        });\r\n\r\n      if (graphop === \"상권지표\") {\r\n        jsondata.push(listset[0].gun);\r\n      } else if (graphop === \"집객력\") {\r\n        jsondata.push(listset[0].zip);\r\n      } else if (graphop === \"구매력\") {\r\n        jsondata.push(listset[0].gu);\r\n      } else if (graphop === \"성장성\") {\r\n        jsondata.push(listset[0].sung);\r\n      }\r\n\r\n      const tempLabels = [];\r\n      const tempDatasets = [];\r\n      const tempDatasetbackcol = [];\r\n\r\n      if (jsondata.length !== 0) {\r\n        try {\r\n          if (jsondata.status !== 500) {\r\n            for (let i = 0; i < jsondata[0].length; i++) {\r\n              tempLabels.push(jsondata[0][i].sang);\r\n              tempDatasets.push(jsondata[0][i].score);\r\n            }\r\n            for (let i = 0; i < tempDatasets.length; i++) {\r\n              tempDatasetbackcol.push(palete[0]);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n\r\n        setData(\r\n          produce(draft => {\r\n            draft.labels = tempLabels;\r\n            draft.datasets[0][\"data\"] = tempDatasets;\r\n            draft.datasets[0][\"borderColor\"] = tempDatasetbackcol;\r\n            draft.datasets[0][\"backgroundColor\"] = tempDatasetbackcol;\r\n            return draft;\r\n          })\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  const palete = [\r\n    \"rgb(55, 155, 255)\",\r\n    \"#B3E5FC\",\r\n    \"#81D4FA\",\r\n    \"#4FC3F7\",\r\n    \"#29B6F6\",\r\n  ];\r\n  const graphlistop = e => {\r\n    setGraphop(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    totaldata();\r\n  }, [dong.dong]);\r\n  return (\r\n    <>\r\n      <p>{dong.dong + \" \" + graphop}</p>\r\n      <div className=\"graphlist\">\r\n        {/* <button className=\"lists\" onClick={graphlistop} value=\"상권지표\">\r\n          상권지표\r\n        </button>\r\n        <button className=\"lists\" onClick={graphlistop} value=\"집객력\">\r\n          집객력\r\n        </button>\r\n        <button className=\"lists\" onClick={graphlistop} value=\"구매력\">\r\n          구매력\r\n        </button>\r\n        <button className=\"lists\" onClick={graphlistop} value=\"성장성\">\r\n          성장성\r\n        </button> */}\r\n\r\n        {/* <select onClick={graphlistop} className=\"lists\">\r\n          <option value=\"\"></option>\r\n          <option value=\"상권지표\">상권지표</option>\r\n          <option value=\"집객력\">집객력</option>\r\n          <option value=\"구매력\">구매력</option>\r\n          <option value=\"성장성\">성장성</option>\r\n        </select> */}\r\n      </div>\r\n      <div className=\"graph\">\r\n        <Bar\r\n          width={250}\r\n          height={200}\r\n          data={datat}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              // text: dong.dong + \" \" + graphop,\r\n              fontSize: 20,\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  stacked: true,\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  stacked: true,\r\n                  ticks: {\r\n                    min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\r\n                    stepSize: 10, // 스케일에 대한 사용자 고정 정의 값\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            legend: {\r\n              display: false,\r\n              position: \"right\",\r\n            },\r\n          }}\r\n        ></Bar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { produce } from \"immer\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport \"../css/insta.css\";\r\n\r\nfunction insta(json1) {\r\n  const [words, setWords] = useState(\"\");\r\n  const [date1, setDate1] = useState(\"\");\r\n  const [date2, setDate2] = useState(\"\");\r\n  const [jsondata, setJsondata] = useState();\r\n  const [load, setLoad] = useState(false);\r\n  const [json, setJson] = useState();\r\n  const [diningcode, setDiningcode] = useState();\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: [],\r\n        backgroundColor: [],\r\n        hoverBackgroundColor: [],\r\n        borderWidth: 2,\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const setword = e => {\r\n    setWords(e.target.value);\r\n    setLoad(false);\r\n  };\r\n  const setdate1 = e => {\r\n    setDate1(e.target.value);\r\n    setLoad(false);\r\n  };\r\n  const setdate2 = e => {\r\n    setDate2(e.target.value);\r\n    setLoad(false);\r\n  };\r\n  const setjson = async () => {\r\n    if (words && date1 && date2 !== \"\") {\r\n      const post = {\r\n        word: words,\r\n        date1: date1,\r\n        date2: date2,\r\n      };\r\n      try {\r\n        await Axios.post(\"/api/instar\", post).then(async function (response) {\r\n          await setJsondata(response.data);\r\n\r\n          console.log(response.data);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const makedata = () => {\r\n    try {\r\n      const tempLabels = [];\r\n      const tempDatasets = [];\r\n      const tempDatasetbackcol = [];\r\n\r\n      if (jsondata.length !== 0) {\r\n        if (jsondata.status !== 500) {\r\n          for (let i = 0; i < jsondata.length; i++) {\r\n            if (jsondata[i].tag === undefined) {\r\n              tempLabels.push(jsondata[i].dong);\r\n            } else {\r\n              tempLabels.push(jsondata[i].tag);\r\n            }\r\n\r\n            tempDatasets.push(jsondata[i].count);\r\n            //console.log(jsondata[i].tag);\r\n          }\r\n          for (let i = 0; i < tempDatasets.length; i++) {\r\n            tempDatasetbackcol.push(palete[i]);\r\n          }\r\n        }\r\n      }\r\n\r\n      setData(\r\n        produce(draft => {\r\n          draft.labels = tempLabels;\r\n          draft.datasets[0][\"data\"] = tempDatasets;\r\n          draft.datasets[0][\"hoverBackgroundColor\"] = tempDatasetbackcol;\r\n          draft.datasets[0][\"backgroundColor\"] = tempDatasetbackcol;\r\n          return draft;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const date = async () => {\r\n    Axios.get(\"/api/instar2\").then(async function (res) {\r\n      await setJson(res.data);\r\n    });\r\n  };\r\n  const diningdate = async () => {\r\n    const post = {\r\n      gu: diningcode,\r\n    };\r\n    Axios.post(\"/api/dining\", post).then(async function (res) {\r\n      await setJsondata(res.data);\r\n      console.log(res.data);\r\n    });\r\n  };\r\n  const dining = async e => {\r\n    setDiningcode(e.target.value);\r\n  };\r\n  // useEffect(() => {\r\n  //   statera();\r\n  //   console.log(load);\r\n  //   console.log(data);\r\n  // }, [words, date1, date2]);\r\n  const onClick = () => {\r\n    setLoad(true);\r\n  };\r\n  useEffect(() => {\r\n    diningdate();\r\n  }, [diningcode]);\r\n  useEffect(() => {\r\n    if (\r\n      date1.substring(date2.length - 2, date2.length) >\r\n      date2.substring(date2.length - 2, date2.length)\r\n    ) {\r\n      alert(\"date2 가 작습니다.\");\r\n      setDate2(\"\");\r\n    }\r\n  }, [date1, date2]);\r\n  useEffect(() => {\r\n    if (words && date1 && date2 !== \"\") {\r\n      setjson();\r\n    }\r\n  }, [words, date1, date2]);\r\n  useEffect(() => {\r\n    if (jsondata !== undefined) {\r\n      makedata();\r\n    }\r\n  }, [jsondata]);\r\n\r\n  const palete = [\r\n    \"#01579B\",\r\n    \"#0277BD\",\r\n    \"#0288D1\",\r\n    \"#039BE5\",\r\n    \"#03A9F4\",\r\n    \"#29B6F6\",\r\n    \"#4FC3F7\",\r\n    \"#81D4FA\",\r\n    \"#B3E5FC\",\r\n    \"#E1F5FE\",\r\n  ];\r\n  return (\r\n    <div className=\"insta\">\r\n      <div className=\"bar\">\r\n        <select className=\"lists\" onChange={setword}>\r\n          <option>업종선택</option>\r\n\r\n          <option value=\"insta강남구맛집\">강남구맛집</option>\r\n          <option value=\"insta강남구카페\">강남구카페</option>\r\n          <option value=\"insta관악구맛집\">관악구맛집</option>\r\n          <option value=\"insta관악구카페\">관악구카페</option>\r\n          <option value=\"insta광진구맛집\">광진구맛집</option>\r\n          <option value=\"insta광진구카페\">광진구카페</option>\r\n          <option value=\"insta동대문구맛집\">동대문구맛집</option>\r\n          <option value=\"insta동대문구카페\">동대문구카페</option>\r\n          <option value=\"insta서초구맛집\">서초구맛집</option>\r\n          <option value=\"insta서초구카페\">서초구카페</option>\r\n          <option value=\"insta성동구맛집\">성동구맛집</option>\r\n          <option value=\"insta성동구카페\">성동구카페</option>\r\n          <option value=\"insta성북구맛집\">성북구맛집</option>\r\n          <option value=\"insta성북구카페\">강남구카페</option>\r\n          <option value=\"insta송파구맛집\">송파구맛집</option>\r\n          <option value=\"insta송파구카페\">송파구카페</option>\r\n          <option value=\"insta용산구맛집\">용산구맛집</option>\r\n          <option value=\"insta용산구카페\">용산구카페</option>\r\n          <option value=\"insta중구맛집\">중구맛집</option>\r\n          <option value=\"insta중구카페\">중구카페</option>\r\n        </select>\r\n        <select className=\"lists\" onChange={setdate1}>\r\n          <option>시작</option>\r\n          {json1.json1.length !== 0 ? (\r\n            json1.json1.map(index => (\r\n              <option key={index} value={index}>\r\n                {index}\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </select>\r\n        <select className=\"lists\" onChange={setdate2}>\r\n          <option>끝</option>\r\n          {json1.json1.length !== 0 ? (\r\n            json1.json1.map(index => (\r\n              <option key={index} value={index}>\r\n                {index}\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </select>\r\n        <select className=\"lists\" onClick={dining}>\r\n          <option> 다이닝 코드</option>\r\n          <option value=\"마포구\">마포구</option>\r\n          <option value=\"송파구\">송파구</option>\r\n          <option value=\"강남구\">강남구</option>\r\n        </select>\r\n        {/* <button onClick={onClick}>클릭</button> */}\r\n      </div>\r\n      <div className=\"graph\">\r\n        {jsondata !== undefined ? (\r\n          <Pie\r\n            width={250}\r\n            height={200}\r\n            data={data}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: words + \" \" + date1 + \" - \" + date2,\r\n                fontSize: 20,\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\r\n                      stepSize: 10, // 스케일에 대한 사용자 고정 정의 값\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              legend: {\r\n                display: false,\r\n                position: \"right\",\r\n              },\r\n            }}\r\n          ></Pie>\r\n        ) : (\r\n          <p>로딩중...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default insta;\r\n","import React, { useState } from \"react\";\r\nimport { FiArrowRightCircle, FiList } from \"react-icons/fi\";\r\nimport \"../css/Biyong.css\";\r\nfunction Biyong() {\r\n  const [g, setG] = useState(0);\r\n  const [b, setB] = useState(0);\r\n  const [d, setD] = useState(0);\r\n  const [i, setI] = useState(0);\r\n  const [build, setBuild] = useState(0);\r\n  const [inte, setInte] = useState(0);\r\n  const [sul, setSul] = useState(0);\r\n  const [ga, setGa] = useState(0);\r\n  const [gita, setGita] = useState(0);\r\n  const [chong, setChong] = useState(0);\r\n  const [year, setYear] = useState(0);\r\n  const [month, setMonth] = useState(0);\r\n  const [ingun, setIngun] = useState(0);\r\n  const [zeryo, setZeryo] = useState(0);\r\n  const [gita2, setGita2] = useState(0);\r\n  const [danga, setDanga] = useState(0);\r\n\r\n  const OnSubmit = (e) => {\r\n    const post = {\r\n      id: window.sessionStorage.getItem(\"id\"),\r\n      g: g,\r\n      b: b,\r\n      d: d,\r\n      i: i,\r\n      build: build,\r\n      inte: inte,\r\n      sul: sul,\r\n      ga: ga,\r\n      gita: gita,\r\n      chong: chong,\r\n      year: year,\r\n      menth: month,\r\n      ingun: ingun,\r\n      zeryo: zeryo,\r\n      gita2: gita2,\r\n      danga: danga,\r\n    };\r\n    try {\r\n      fetch(\"/api/biyong\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then((response) => response.text())\r\n        .then((message) => {\r\n          console.log(message);\r\n          window.location.replace(\"/\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"title\">\r\n                <p>초기 투자비용</p>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr>\r\n              <th className=\"text\">\r\n                <p>권리금</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"g\"\r\n                  onChange={(e) => setG(e.target.value)}\r\n                ></input>\r\n              </th>\r\n              <th className=\"text\">\r\n                <p>보증금</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"b\"\r\n                  onChange={(e) => setB(e.target.value)}\r\n                ></input>\r\n              </th>\r\n              <th className=\"text\">\r\n                <p>대출금/이자(월간)</p>\r\n              </th>\r\n              <th colSpan=\"2\" className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"d\"\r\n                  onChange={(e) => setD(e.target.value)}\r\n                ></input>\r\n                <p>만원</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"i\"\r\n                  onChange={(e) => setI(e.target.value)}\r\n                ></input>\r\n                <p>%</p>\r\n              </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th className=\"text\">\r\n                <p>기타 투자비</p>\r\n              </th>\r\n              <th colSpan=\"6\" className=\"inputt\">\r\n                <p>건축비</p>\r\n                {\"\\t\"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"build\"\r\n                  onChange={(e) => setBuild(e.target.value)}\r\n                ></input>\r\n                <p>인테리어비</p>\r\n                {\"\\t\"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"inte\"\r\n                  onChange={(e) => setInte(e.target.value)}\r\n                ></input>\r\n                <p>설비비</p>\r\n                {\"\\t\"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"sul\"\r\n                  onChange={(e) => setSul(e.target.value)}\r\n                ></input>\r\n              </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th colSpan=\"6\" className=\"inputt\">\r\n                <p>가맹관련</p>\r\n                {\"\\t\"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"ga\"\r\n                  onChange={(e) => setGa(e.target.value)}\r\n                ></input>\r\n                <p>기타비용</p>\r\n                {\"\\t\"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"gi\"\r\n                  onChange={(e) => setGita(e.target.value)}\r\n                ></input>\r\n              </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th colSpan=\"6\" className=\"text\">\r\n                <h3>\r\n                  <p>총 투자비/감가상각 기간</p>\r\n                </h3>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <p>\r\n                  ※ 감가상각 기간은 인테리어나 설비, 집기 등 기간이 지날수록\r\n                  가치가 떨어져 교체해야 하는 시기까지의 기간을 의미\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"chong\"\r\n                  onChange={(e) => setChong(e.target.value)}\r\n                ></input>\r\n                <p>만원</p>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"year\"\r\n                  onChange={(e) => setYear(e.target.value)}\r\n                ></input>\r\n                <p>년</p>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"title\">\r\n                <p>운영비용</p>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th className=\"text\">\r\n                <p>월세</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"month\"\r\n                  onChange={(e) => setMonth(e.target.value)}\r\n                ></input>\r\n              </th>\r\n              <th className=\"text\">\r\n                <p>인건비</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"ingun\"\r\n                  onChange={(e) => setIngun(e.target.value)}\r\n                ></input>\r\n              </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th className=\"text\">\r\n                <p>재료비</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"zeryo\"\r\n                  onChange={(e) => setZeryo(e.target.value)}\r\n                ></input>\r\n              </th>\r\n              <th className=\"text\">\r\n                <p>기타비용</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"gita2\"\r\n                  onChange={(e) => setGita2(e.target.value)}\r\n                ></input>\r\n              </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th className=\"text\">\r\n                <p>객 단가 ※ 1명의 고객이 1회 결제 시 이용하는 평균금액</p>\r\n              </th>\r\n              <th className=\"inputt\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"danga\"\r\n                  onChange={(e) => setDanga(e.target.value)}\r\n                ></input>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <div className=\"end\">\r\n                  <p>제출하기</p>\r\n                  <FiArrowRightCircle onClick={OnSubmit}></FiArrowRightCircle>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Biyong;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"../css/Biyongop.css\";\r\n// const cssa = styled(`.table div{\r\n//     float:left;\r\n// }`);\r\n\r\nconst Biyongop = dong => {\r\n  const [json1, setJson1] = useState();\r\n  const [ma2019, setMa2019] = useState(\"\");\r\n  const [ma2020, setMa2020] = useState(\"\");\r\n  const [ma20192, setMa20192] = useState(\"\");\r\n  const [ma20202, setMa20202] = useState(\"\");\r\n  const [dan, setDan] = useState(\"\");\r\n  const [bi, setBi] = useState(\"\");\r\n  const [bi1, setBi1] = useState(\"\");\r\n  const [bi12, setBi12] = useState(\"\");\r\n  const [key1, setKey1] = useState();\r\n  async function b(key1) {\r\n    console.log(key1);\r\n    for (let i = 0; i < json1.length; i++) {\r\n      if (json1[i].gil === key1) {\r\n        await setBi(json1[i].hap2);\r\n        await setBi1(json1[i].hap1);\r\n        await setBi12(json1[i].hap12);\r\n        await setMa2019(json1[i].월별2019매출예측);\r\n        await setMa2020(json1[i].월별2020매출예측);\r\n\r\n        await setMa20192(json1[i].월별2019매출예측2);\r\n        await setMa20202(json1[i].월별2020매출예측2);\r\n        await setDan(json1[i].danga);\r\n      }\r\n    }\r\n  }\r\n  const gilst = async e => {\r\n    await b(e.target.value);\r\n  };\r\n\r\n  async function a() {\r\n    const post = {\r\n      id: window.sessionStorage.getItem(\"id\"),\r\n      dong: dong.dong,\r\n    };\r\n    try {\r\n      await Axios.post(\"/api/biyong1\", post).then(async res => {\r\n        await setJson1(res.data);\r\n        console.log(res.data);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    a();\r\n  }, [dong.dong]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"macul\">\r\n        {json1 !== undefined ? (\r\n          json1.length !== 0 ? (\r\n            <>\r\n              <div>\r\n                <select onClick={gilst} className=\"lists\">\r\n                  <option></option>\r\n                  {json1.map(gil => {\r\n                    return (\r\n                      <option key={gil.gil} value={gil.gil}>\r\n                        {gil.gil}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n              {ma2019 !== \"\" ? (\r\n                <div className=\"table\">\r\n                  <div className=\"jun\">\r\n                    <p>전년도 월평균 매출액</p>\r\n                    <p>{ma20192 + \"원\"}</p>\r\n                  </div>\r\n                  <div className=\"hu\">\r\n                    <p>금년도 월평균 예상 매출액</p>\r\n                    <p>{ma20202 + \"원\"}</p>\r\n                  </div>\r\n                  <div className=\"chong\">\r\n                    <p>나의 총 지출액</p>\r\n                    <p>{bi + \"원\"}</p>\r\n                  </div>\r\n                  <div className=\"su\">\r\n                    <p>수익률 예측: {parseInt((ma2020 * 100) / bi1)} %</p>\r\n                  </div>\r\n                  <div className=\"son\">\r\n                    <p>손익 분기 점: {bi12} 원</p>\r\n                  </div>\r\n                  <div className=\"dan\">\r\n                    <p>\r\n                      카페 창업시 잔당 {dan}원으로 월 평균 {parseInt(bi1 / dan)}{\" \"}\r\n                      잔 팔아야 합니다!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p></p>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Biyongop;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Axios from \"axios\";\r\nimport produce from \"immer\";\r\n\r\nconst Chuihyung = (dong) => {\r\n  const palete = [\"rgb(55, 155, 255)\"];\r\n  const [dong1, setDong1] = useState(dong.dong);\r\n  const [chuidata, setChuidata] = useState();\r\n  const [gil, setGil] = useState(\"\");\r\n  const [gillist, setGillist] = useState([]);\r\n\r\n  const makejson1 = async () => {\r\n    const post = {\r\n      dong: dong.dong,\r\n    };\r\n    await Axios.post(\"/api/chui\", post).then(async function (res) {\r\n      await setChuidata(res.data);\r\n      await console.log(res.data);\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: gil,\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"rgba(75,192,192,0.4)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgba(75,192,192,1)\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const makejson = async () => {\r\n    const post = {\r\n      dong: dong.dong,\r\n    };\r\n    await Axios.post(\"/api/chui\", post).then(async function (res) {\r\n      await setChuidata(res.data);\r\n      await console.log(chuidata);\r\n      return res.data;\r\n    });\r\n  };\r\n  const gillistset = async () => {\r\n    let list = [];\r\n    for (let i = 0; i < chuidata.length; i++) {\r\n      if (i !== 0) {\r\n        if (chuidata[i].상권_코드_명 !== chuidata[i - 1].상권_코드_명) {\r\n          await list.push(chuidata[i].상권_코드_명);\r\n        }\r\n      }\r\n    }\r\n    await setGillist(list);\r\n  };\r\n  const gilst = async (e) => {\r\n    await setGil(e.target.value);\r\n  };\r\n\r\n  const makedata = () => {\r\n    try {\r\n      const tempLabels = [];\r\n      const tempDatasets = [];\r\n      const tempDatasetbackcol = [];\r\n\r\n      if (chuidata.length !== 0) {\r\n        if (chuidata.status !== 500) {\r\n          for (let i = 0; i < chuidata.length; i++) {\r\n            if (gil === chuidata[i].상권_코드_명) {\r\n              tempLabels.push(\r\n                chuidata[i].기준_년_코드 +\r\n                  \"년 \" +\r\n                  chuidata[i].기준_분기_코드 +\r\n                  \"분기\"\r\n              );\r\n              tempDatasets.push(parseInt(chuidata[i].분기별_매출));\r\n              //console.log(chuidata[i].분기별_매출);\r\n            }\r\n            for (let i = 0; i < tempDatasets.length; i++) {\r\n              tempDatasetbackcol.push(palete[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      setData(\r\n        produce((draft) => {\r\n          draft.datasets[0][\"label\"] = gil;\r\n          draft.labels = tempLabels;\r\n          draft.datasets[0][\"data\"] = tempDatasets;\r\n          //   draft.datasets[0][\"borderColor\"] = tempDatasetbackcol;\r\n          //   draft.datasets[0][\"backgroundColor\"] = tempDatasetbackcol;\r\n          return draft;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDong1(dong.dong);\r\n    makejson1();\r\n  }, [dong.dong]);\r\n  useEffect(() => {\r\n    console.log(chuidata);\r\n    if (chuidata !== undefined) {\r\n      gillistset();\r\n    }\r\n  }, [chuidata]);\r\n  useEffect(() => {\r\n    makedata();\r\n  }, [gil]);\r\n  return (\r\n    <div>\r\n      <select onClick={gilst} className=\"lists\">\r\n        <option></option>\r\n        {gillist.map((gill) => {\r\n          return (\r\n            <option key={gill} value={gill}>\r\n              {gill}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      {chuidata !== undefined ? <Line data={data}></Line> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chuihyung;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"../css/Gilcuchen.css\";\r\n\r\nconst Gilcuchun = dong => {\r\n  const [list, setList] = useState();\r\n  const [dong1, setDong] = useState();\r\n  const [first, setFirst] = useState(\"\");\r\n  const [sec, setSec] = useState(\"\");\r\n  const [thi, setThi] = useState(\"\");\r\n  const [four, setFour] = useState(\"\");\r\n\r\n  const makelist = async () => {\r\n    const post = {\r\n      dong: dong.dong,\r\n    };\r\n    try {\r\n      await Axios.post(\"/api/gil\", post).then(async function (res) {\r\n        await setList(res.data);\r\n        console.log(res.data);\r\n        return res.data;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    makelist();\r\n  }, [dong.dong]);\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"first\">\r\n        <p>{dong.dong} 의 길 추천은</p>\r\n      </div>\r\n      <div className=\"second\"></div>\r\n      {/* {dong.json !== undefined ? (\r\n        <div>\r\n          <p>1</p>\r\n          {dong.json.map(i => (\r\n            <p key={i.gil}>\r\n              {\" \"}\r\n              {i.gil} {i.avg평균매출}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )} */}\r\n      {list !== undefined ? (\r\n        <div className=\"cuchun\">\r\n          <div className=\"af\">\r\n            <p>순위</p>\r\n            {list.map((i, index) => (\r\n              <p key={i.gil}> {index + 1}</p>\r\n            ))}\r\n          </div>\r\n          <div class=\"gname\">\r\n            <p>길 이름</p>\r\n            {list.map(i => (\r\n              <p key={i.gil}> {i.gil}</p>\r\n            ))}\r\n          </div>\r\n          <div className=\"avg\">\r\n            <p>가중 평균 매출 대비 커피 매출 비율</p>\r\n            {list.map(i => (\r\n              <p key={i.gil}> {parseInt(i.coffee평균매출)}%</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Gilcuchun;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Action.css\";\r\nimport { BsBarChartFill, BsClipboard, BsGraphUp } from \"react-icons/bs\";\r\nimport { FiInstagram } from \"react-icons/fi\";\r\nimport { FaRegThumbsUp } from \"react-icons/fa\";\r\nimport Graph from \"./Graph\";\r\nimport Insta from \"./Insta\";\r\nimport Biyong from \"./Biyong\";\r\nimport Biyongop from \"./Biyongop\";\r\nimport Axios from \"axios\";\r\nimport Chuihyung from \"./Chuihyung\";\r\nimport Gilcuchun from \"./Gilcuchun\";\r\n\r\nconst Action = (dong, fa) => {\r\n  const [dong1, setDong1] = useState(dong.dong);\r\n  const [graphstate, setGraphstate] = useState(false);\r\n  const [instastate, setInstastate] = useState(false);\r\n  const [chui, setChui] = useState(false);\r\n  const [ma, setMa] = useState(\"\");\r\n  const [biyong, setBiyong] = useState(false);\r\n  const [json, setJson] = useState();\r\n  const [chuidata, setChuidata] = useState();\r\n  const [gilst, setGilst] = useState(false);\r\n  const [gildata, setGildata] = useState();\r\n  let isq = false;\r\n\r\n  const isdong = () => {\r\n    if (dong.dong === \"\") {\r\n      alert(\"동을 선택해 주세요\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const graph = () => {\r\n    const isf = isdong();\r\n    if (isf) {\r\n      if (chui) {\r\n        setChui(false);\r\n      }\r\n      if (instastate) {\r\n        setInstastate(false);\r\n      }\r\n      if (biyong) {\r\n        setBiyong(false);\r\n      }\r\n      if (gilst) {\r\n        setGilst(false);\r\n      }\r\n      if (graphstate) {\r\n        setGraphstate(false);\r\n      } else {\r\n        setGraphstate(true);\r\n      }\r\n    }\r\n  };\r\n  const chuist = async () => {\r\n    const isf = isdong();\r\n    if (isf) {\r\n      if (instastate) {\r\n        setInstastate(false);\r\n      }\r\n      if (biyong) {\r\n        setBiyong(false);\r\n      }\r\n      if (graphstate) {\r\n        setGraphstate(false);\r\n      }\r\n      if (gilst) {\r\n        setGilst(false);\r\n      }\r\n      if (chui) {\r\n        setChui(false);\r\n      } else {\r\n        // if (chuidata === undefined) {\r\n        //   const makejson = async () => {\r\n        //     const post = {\r\n        //       dong: dong.dong,\r\n        //     };\r\n        //     await Axios.post(\"/api/chui\", post).then(async function (res) {\r\n        //       await setChuidata(res.data);\r\n        //       await console.log(res.data);\r\n        //     });\r\n        //   };\r\n        //   await makejson();\r\n        // } else {\r\n        await setChui(true);\r\n        // }\r\n      }\r\n    }\r\n  };\r\n\r\n  const instast = async () => {\r\n    if (graphstate) {\r\n      setGraphstate(false);\r\n    }\r\n    if (chui) {\r\n      setChui(false);\r\n    }\r\n    if (biyong) {\r\n      setBiyong(false);\r\n    }\r\n    if (gilst) {\r\n      setGilst(false);\r\n    }\r\n    if (instastate) {\r\n      setInstastate(false);\r\n    } else {\r\n      if (json !== undefined) {\r\n        console.log(json);\r\n        setInstastate(true);\r\n      } else {\r\n        await Axios.get(\"/api/instar2\").then(async function (res) {\r\n          await setJson(res.data);\r\n          await console.log(res.data.length);\r\n          await console.log(json);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const biyongsta = async () => {\r\n    if (window.sessionStorage.getItem(\"id\") !== null) {\r\n      const isf = isdong();\r\n      if (isf) {\r\n        if (chui) {\r\n          setChui(false);\r\n        }\r\n        if (graphstate) {\r\n          setGraphstate(false);\r\n        }\r\n        if (instastate) {\r\n          setInstastate(false);\r\n        }\r\n        if (gilst) {\r\n          setGilst(false);\r\n        }\r\n        if (biyong) {\r\n          setBiyong(false);\r\n        } else {\r\n          await setBiyong(true);\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"로그인 해주세요\");\r\n    }\r\n  };\r\n\r\n  const dabongsta = async () => {\r\n    const isf = isdong();\r\n    if (isf) {\r\n      if (chui) {\r\n        setChui(false);\r\n      }\r\n      if (graphstate) {\r\n        setGraphstate(false);\r\n      }\r\n      if (instastate) {\r\n        setInstastate(false);\r\n      }\r\n      if (biyong) {\r\n        setBiyong(false);\r\n      }\r\n      if (gilst) {\r\n        setGilst(false);\r\n      } else {\r\n        // if (gildata === undefined) {\r\n        //   const makelist = async () => {\r\n        //     const post = {\r\n        //       dong: dong.dong,\r\n        //     };\r\n        //     try {\r\n        //       await Axios.post(\"/api/gil\", post).then(async function (res) {\r\n        //         await setGildata(res.data);\r\n        //       });\r\n        //     } catch (error) {\r\n        //       console.log(error);\r\n        //     }\r\n        //   };\r\n        // await makelist();\r\n        // } else {\r\n        console.log(gildata);\r\n        await setGilst(true);\r\n        // }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (json !== undefined) {\r\n      instast();\r\n    }\r\n  }, [json]);\r\n\r\n  // useEffect(() => {\r\n  //   if (gildata !== undefined && !gilst) {\r\n  //     dabongsta();\r\n  //   }\r\n  //   if (gilst && gildata !== undefined) {\r\n  //     setGildata();\r\n  //     setGilst(false);\r\n  //   }\r\n\r\n  //   console.log(gilst);\r\n  // }, [gildata]);\r\n  return (\r\n    <div className=\"Action\">\r\n      <div className=\"sel\">\r\n        {dong.dong === \"\" ? <p>동을 선택해주세요</p> : <p>{dong.dong}</p>}\r\n\r\n        <div className=\"icons\">\r\n          <div className=\"li\" onClick={graph}>\r\n            <BsBarChartFill></BsBarChartFill>\r\n            <p>상권 통계지표</p>\r\n          </div>\r\n          <div className=\"li\" onClick={biyongsta}>\r\n            <BsClipboard></BsClipboard>\r\n            <p>수익성 분석</p>\r\n          </div>\r\n          <div className=\"li\" onClick={instast}>\r\n            <FiInstagram></FiInstagram>\r\n            <p>SNS 통계지표</p>\r\n          </div>\r\n          <div className=\"li\" onClick={dabongsta}>\r\n            <FaRegThumbsUp></FaRegThumbsUp>\r\n            <p>길 추천</p>\r\n          </div>\r\n          <div className=\"li\" onClick={chuist}>\r\n            <BsGraphUp></BsGraphUp>\r\n            <p>추이 분석</p>\r\n          </div>\r\n        </div>\r\n        {/* {fa.fa !== \"\" && dong.dong !== \"\" ? (\r\n          <p></p>\r\n        ) : (\r\n          <div className=\"sr\">\r\n            <p>\r\n              {dong.dong}에 {fa.fa}\r\n            </p>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n      {instastate ? (\r\n        <div className=\"option\">\r\n          <Insta json1={json}></Insta>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {graphstate ? (\r\n        <div className=\"option\">\r\n          <Graph dong={dong.dong} fa={fa.fa}></Graph>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      {biyong ? (\r\n        <div className=\"option\">\r\n          <Biyongop dong={dong.dong}></Biyongop>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      {chui ? (\r\n        <div className=\"option\">\r\n          <Chuihyung dong={dong.dong}></Chuihyung>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      {gilst ? (\r\n        <div className=\"option\">\r\n          <Gilcuchun dong={dong.dong} json={gildata}></Gilcuchun>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Action;\r\n","/*global kakao*/\r\nimport React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport a from \"../json/dong1.geojson\";\r\nimport $ from \"jquery\";\r\nimport \"../css/Map.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Action from \"./Action\";\r\n\r\nfunction Map() {\r\n  const [sig_cd1, setSig_cd1] = useState(\"\");\r\n  const [gu, setGu] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dong, setDong] = useState(\"\");\r\n  const [fa, setFa] = useState(\"\");\r\n  const [fanum, setFanum] = useState();\r\n  const [jsondata, setJsondata] = useState(Object);\r\n  const [btn1, setBtn1] = useState(\"btn\");\r\n  const [btn2, setBtn2] = useState(\"btn\");\r\n  const [btn3, setBtn3] = useState(\"btn\");\r\n  const [btn4, setBtn4] = useState(\"btn\");\r\n  const [btn5, setBtn5] = useState(\"btn\");\r\n  const [btn6, setBtn6] = useState(\"btn\");\r\n  const [btn7, setBtn7] = useState(\"btn\");\r\n  const [btn8, setBtn8] = useState(\"btn\");\r\n  const [btn9, setBtn9] = useState(\"btn\");\r\n  const [btn10, setBtn10] = useState(\"btn\");\r\n\r\n  const palete = [\r\n    \"rgb(255,155,255)\",\r\n    \"rgb(255,55,255)\",\r\n    \"rgb(55,155,255)\",\r\n    \"rgb(55,0,255)\",\r\n    \"rgb(0,0,155)\",\r\n    \"rgb(0,0,55)\",\r\n    \"rgb(0,0,0)\",\r\n    \"rgb(0,255,0)\",\r\n    \"rgb(55,255,0)\",\r\n    \"rgb(255,0,155)\",\r\n    \"rgb(255,55,55)\",\r\n    \"rgb(255,55,155)\",\r\n    \"rgb(255,155,255)\",\r\n    \"rgb(255,255,255)\",\r\n  ];\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.async = true;\r\n    script.src =\r\n      \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=5f5809befc934f9413253553bc2551f6&autoload=false\";\r\n    document.head.appendChild(script);\r\n    script.onload = () => {\r\n      kakao.maps.load(() => {\r\n        // var el = document.getElementById(\"map\");\r\n        var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\r\n          mapOption = {\r\n            center: new kakao.maps.LatLng(37.536, 127.0), // 지도의 중심좌표\r\n            level: 8, // 지도의 확대 레벨\r\n          };\r\n\r\n        var map = new kakao.maps.Map(mapContainer, mapOption);\r\n        var customOverlay = new kakao.maps.CustomOverlay();\r\n\r\n        $.getJSON(a, function (geojson) {\r\n          var data = geojson.features;\r\n          var coordinates = []; //좌표 저장할 배열\r\n          var name = \"\"; //행정 구 이름\r\n          var sig_cd = \"\";\r\n\r\n          $.each(data, function (index, val) {\r\n            coordinates = val.geometry.coordinates;\r\n            sig_cd = val.properties.SIG_CD;\r\n            name = val.properties.EMD_KOR_NM;\r\n\r\n            displayArea(coordinates, name, sig_cd, jsondata);\r\n          });\r\n        });\r\n\r\n        var polygons = []; //function 안 쪽에 지역변수로 넣으니깐 폴리곤 하나 생성할 때마다 배열이 비어서 클릭했을 때 전체를 못 없애줌.  그래서 전역변수로 만듦.\r\n\r\n        //행정구역 폴리곤\r\n        function displayArea(coordinates, name, sig_cd, jsondata) {\r\n          var path = []; //폴리곤 그려줄 path\r\n          var points = []; //중심좌표 구하기 위한 지역구 좌표들\r\n          let j = 0;\r\n          $.each(coordinates[0][0], function (index, coordinate) {\r\n            //console.log(coordinates)를 확인해보면 보면 [0]번째에 배열이 주로 저장이 됨.  그래서 [0]번째 배열에서 꺼내줌.\r\n\r\n            var point = new Object();\r\n            point.x = coordinate[1];\r\n            point.y = coordinate[0];\r\n            points.push(point);\r\n            path.push(new kakao.maps.LatLng(coordinate[1], coordinate[0])); //new daum.maps.LatLng가 없으면 인식을 못해서 path 배열에 추가\r\n          });\r\n\r\n          if (jsondata === {}) {\r\n          } else {\r\n            let i = 0;\r\n            for (i = 0; i < jsondata.length; i++) {\r\n              if (jsondata[i].dong === name) {\r\n                j = jsondata[i].count;\r\n              }\r\n            }\r\n          }\r\n\r\n          let fillColor = \"rgb(220,220,220)\";\r\n          if (j >= 0 && j < 20) {\r\n            fillColor = \"\trgb(220,220,220)\";\r\n          }\r\n          if (j >= 20 && j < 50) {\r\n            fillColor = \"rgb(192,192,192)\";\r\n          }\r\n          if (j >= 50 && j < 70) {\r\n            fillColor = \"rgb(128,128,128)\";\r\n          }\r\n          if (j >= 70 && j < 100) {\r\n            fillColor = \"rgb(105,105,105)\";\r\n          }\r\n          if (j >= 100) {\r\n            fillColor = \"rgb(0,0,0)\";\r\n          }\r\n\r\n          // 다각형을 생성합니다\r\n          var polygon = new kakao.maps.Polygon({\r\n            map: map, // 다각형을 표시할 지도 객체\r\n            path: path,\r\n            strokeWeight: 2,\r\n            strokeColor: \"rgb(255,255,255)\",\r\n            strokeOpacity: 0.8,\r\n            fillColor: fillColor,\r\n            fillOpacity: 0.7,\r\n          });\r\n\r\n          polygons.push(polygon); //폴리곤 제거하기 위한 배열\r\n\r\n          // 다각형에 click 이벤트를 등록하고 이벤트가 발생하면 해당 지역 확대을 확대합니다.\r\n          kakao.maps.event.addListener(polygon, \"click\", function () {\r\n            setDong(name);\r\n          });\r\n          kakao.maps.event.addListener(polygon, \"mouseover\", function (\r\n            mouseEvent\r\n          ) {\r\n            polygon.setOptions({\r\n              fillColor: \"#09f\",\r\n            });\r\n\r\n            customOverlay.setContent(\r\n              '<div className=\"mouse\" style=\"position: absolute;background: #fff;border: 1px solid #888;border-radius: 3px;font-size: 12px;top: -15px;left: 20px;padding: 2px;\">' +\r\n                \"<p>\" +\r\n                name +\r\n                \" \" +\r\n                j +\r\n                \"개입니다\" +\r\n                \"</p> </div>\"\r\n            );\r\n\r\n            customOverlay.setPosition(mouseEvent.latLng);\r\n            customOverlay.setMap(map);\r\n          });\r\n          kakao.maps.event.addListener(polygon, \"mouseout\", function () {\r\n            polygon.setOptions({\r\n              fillColor: fillColor,\r\n            });\r\n            customOverlay.setMap(null);\r\n          });\r\n        }\r\n      });\r\n    };\r\n  }, [jsondata]);\r\n  useEffect(() => {\r\n    console.log(fa);\r\n    if (jsondata === undefined) {\r\n      josndatamake();\r\n    }\r\n  }, [fa]);\r\n  const namei = () => {\r\n    console.log(dong);\r\n  };\r\n\r\n  const josndatamake = async (e) => {\r\n    const post = {\r\n      classes: e,\r\n    };\r\n    try {\r\n      await fetch(\"/api/upjong\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          charset: \"utf-8\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then((response) => response.text())\r\n        .then(async function (message) {\r\n          console.log(message);\r\n          await setJsondata(JSON.parse(message));\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const onsel1 = async (e) => {\r\n    if (btn1 === \"btn\") {\r\n      setBtn10(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn1(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn1(\"btn\");\r\n\r\n      await setFa(\"\");\r\n    }\r\n  };\r\n  const onsel2 = async (e) => {\r\n    if (btn2 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn2(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn2(\"btn\");\r\n    }\r\n  };\r\n  const onsel3 = async (e) => {\r\n    if (btn3 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn3(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn3(\"btn\");\r\n    }\r\n  };\r\n  const onsel4 = async (e) => {\r\n    if (btn4 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn4(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn4(\"btn\");\r\n    }\r\n  };\r\n  const onsel5 = async (e) => {\r\n    if (btn5 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn5(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn5(\"btn\");\r\n    }\r\n  };\r\n  const onsel6 = async (e) => {\r\n    if (btn6 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn6(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn6(\"btn\");\r\n    }\r\n  };\r\n  const onsel7 = async (e) => {\r\n    if (btn7 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn7(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn7(\"btn\");\r\n    }\r\n  };\r\n  const onsel8 = async (e) => {\r\n    if (btn8 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn10(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn8(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn8(\"btn\");\r\n    }\r\n  };\r\n  const onsel9 = async (e) => {\r\n    console.log(\"핫원\");\r\n    if (btn9 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn10(\"btn\");\r\n\r\n      setBtn9(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn9(\"btn\");\r\n    }\r\n  };\r\n\r\n  // const func1 = useCallback(()=>{\r\n  //   // 무언가 실행함\r\n  // },[??])\r\n\r\n  const onsel10 = async (e) => {\r\n    if (btn10 === \"btn\") {\r\n      setBtn1(\"btn\");\r\n      setBtn2(\"btn\");\r\n      setBtn3(\"btn\");\r\n      setBtn4(\"btn\");\r\n      setBtn5(\"btn\");\r\n      setBtn6(\"btn\");\r\n      setBtn7(\"btn\");\r\n      setBtn8(\"btn\");\r\n      setBtn9(\"btn\");\r\n\r\n      setBtn10(\"onbtn\");\r\n      let fa1 = e.target.value;\r\n      await josndatamake(fa1);\r\n      console.log(fa1);\r\n      await setFa(fa1);\r\n    } else {\r\n      setBtn10(\"btn\");\r\n    }\r\n  };\r\n  const OnSubmit = (e) => {};\r\n  return (\r\n    <>\r\n      <div className=\"map\" id=\"map\"></div>\r\n      <Action dong={dong} fa={fanum}></Action>\r\n      <div className=\"list\">\r\n        <button className={btn1} onClick={onsel1} value=\"커피전문점/카페/다방\">\r\n          커피전문점/카페/다방\r\n        </button>\r\n        <button className={btn2} onClick={onsel2} value=\"한식/백반/한정식\">\r\n          한식\r\n        </button>\r\n        <button className={btn3} onClick={onsel3} value=\"라면김밥분식\">\r\n          분식\r\n        </button>\r\n        <button className={btn4} onClick={onsel4} value=\"음식점-일식\">\r\n          일식\r\n        </button>\r\n        <button className={btn5} onClick={onsel5} value=\"편의점\">\r\n          편의점\r\n        </button>\r\n        <button className={btn6} onClick={onsel6} value=\"호프/맥주\">\r\n          호프/맥주\r\n        </button>\r\n        <button className={btn7} onClick={onsel7} value=\"중국음식/중국집\">\r\n          중국음식/중국집\r\n        </button>\r\n        <button className={btn8} onClick={onsel8} value=\"패스트푸드\">\r\n          패스트푸드\r\n        </button>\r\n        <button className={btn9} onClick={onsel9} value=\"학원(종합)\">\r\n          학원(종합)\r\n        </button>\r\n        <button className={btn10} onClick={onsel10} value=\"안경원\">\r\n          안경원\r\n        </button>\r\n\r\n        {/* <ul>\r\n          <li value=\"커피전문점/카페/다방\">커피전문점/카페/다방</li>\r\n          <li value=\"한식/백반/한정식\">한식</li>\r\n          <li value=\"라면김밥분식\">분식</li>\r\n          <li value=\"음식점-일식\">일식</li>\r\n          <li value=\"편의점\">편의점</li>\r\n          <li value=\"호프/맥주\">호프/맥주</li>\r\n          <li value=\"중국음식/중국집\">중국음식/중국집</li>\r\n          <li value=\"패스트푸드\">패스트푸드</li>\r\n          <li value=\"학원(종합)\">학원</li>\r\n          <li value=\"안경원\">안경원</li>\r\n        </ul> */}\r\n        {/* <select onClick={onsel}>\r\n          <option></option>\r\n          <option value=\"커피전문점/카페/다방\">커피전문점/카페/다방</option>\r\n          <option value=\"한식/백반/한정식\">한식</option>\r\n          <option value=\"라면김밥분식\">분식</option>\r\n          <option value=\"음식점-일식\">일식</option>\r\n          <option value=\"편의점\">편의점</option>\r\n          <option value=\"호프/맥주\">호프/맥주</option>\r\n          <option value=\"중국음식/중국집\">중국음식/중국집</option>\r\n          <option value=\"패스트푸드\">패스트푸드</option>\r\n          <option value=\"학원(종합)\">학원</option>\r\n          <option value=\"안경원\">안경원</option>\r\n        </select> */}\r\n      </div>\r\n\r\n      {/* <form onSubmit={OnSubmit} >\r\n        <input type=\"submit\" value=\"전송\"></input>\r\n\r\n      </form> */}\r\n      {/* <button onClick={namei}>구이름</button> */}\r\n\r\n      {/* {(window.sessionStorage.getItem(\"message\")!==\"\"?(<img src={window.sessionStorage.getItem(\"message\")}></img>) :(<p>이미지가 없음 </p>))} */}\r\n    </>\r\n    //<Test></Test>\r\n    //<Test2></Test2>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/Login.css\";\r\nimport { FiUserPlus, FiMap, FiUserMinus } from \"react-icons/fi\";\r\n\r\nconst Login = Loginstate => {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [onLogin, setOnLogin] = useState(\"login\");\r\n\r\n  const OnSubmit = e => {\r\n    const post = {\r\n      id: id,\r\n      pw: pw,\r\n    };\r\n    fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then(response => response.text())\r\n      .then(message => {\r\n        console.log(message);\r\n        if (message === \"re\") {\r\n          alert(\"다시 시도\");\r\n        } else {\r\n          window.sessionStorage.setItem(\"id\", id);\r\n          window.location.replace(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Back\">\r\n      <div className=\"onLogin\">\r\n        <div className=\"form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"id\"\r\n            onChange={e => setId(e.target.value)}\r\n            placeholder=\"id\"\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"pw\"\r\n            onChange={e => setPw(e.target.value)}\r\n            placeholder=\"password\"\r\n          />\r\n\r\n          <button onClick={OnSubmit}>Login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"../css/Login.css\";\r\n\r\nfunction Join() {\r\n  const [idcheck, setIdcheck] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [repw, setRepw] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [checkmessage, setCheckMessage] = useState(\"\");\r\n  const [joinmessage, setJoinmessage] = useState(\"\");\r\n\r\n  const idch = () => {\r\n    //setIdcheck(true);\r\n    const post = {\r\n      id: id,\r\n    };\r\n    fetch(\"/api/checkId\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then(response => response.text())\r\n      .then(message => {\r\n        console.log(message);\r\n        setCheckMessage(message);\r\n        setIdcheck(true);\r\n      });\r\n  };\r\n  const anSubmit = e => {\r\n    if (pw === repw) {\r\n      const post = {\r\n        id: id,\r\n        pw: pw,\r\n        name: name,\r\n        age: age,\r\n      };\r\n      fetch(\"/api/insert\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      })\r\n        .then(response => response.text())\r\n        .then(message => {\r\n          console.log(message);\r\n        });\r\n      alert(\"가입완료\");\r\n      window.location.replace(\"/\");\r\n    } else {\r\n      alert(\"비밀번호가 맞지 않습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Back\">\r\n      <div className=\"Join\">\r\n        <div className=\"form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"Id\"\r\n            onChange={e => setId(e.target.value)}\r\n            placeholder=\"id\"\r\n          />\r\n          <input type=\"button\" onClick={idch} value=\"아이디 중복 검사\" />\r\n          {idcheck === true ? <p>{checkmessage}</p> : <p></p>}\r\n          <input\r\n            type=\"password\"\r\n            name=\"Pw\"\r\n            onChange={e => setPw(e.target.value)}\r\n            placeholder=\"password\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"rePw\"\r\n            onChange={e => setRepw(e.target.value)}\r\n            placeholder=\"REpassword\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={e => setName(e.target.value)}\r\n            placeholder=\"name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"age\"\r\n            onChange={e => setAge(e.target.value)}\r\n            placeholder=\"age\"\r\n          />\r\n\r\n          <input type=\"button\" value=\"Join\" onClick={anSubmit} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Join;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GrHome } from \"react-icons/gr\";\r\nimport {\r\n  AiFillHome,\r\n  AiOutlineLogin,\r\n  AiOutlineAudit,\r\n  AiOutlineHome,\r\n} from \"react-icons/ai\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { FcCancel } from \"react-icons/fc\";\r\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Header.css\";\r\nimport Login from \"./Login\";\r\nimport Join from \"./Join\";\r\nimport Biyong from \"./Biyong\";\r\n\r\nfunction Header() {\r\n  const [loginstate, setLoginstate] = useState(false);\r\n  const [joinstate, setJoinstate] = useState(false);\r\n  const [header, setHeader] = useState(\"Header\");\r\n  const [biyongst, setBiyongst] = useState(false);\r\n  const onclick = () => {\r\n    if (joinstate) {\r\n      setJoinstate(false);\r\n    }\r\n    if (biyongst) {\r\n      setLoginstate(false);\r\n    }\r\n    if (loginstate) {\r\n      setLoginstate(false);\r\n      setHeader(\"Header\");\r\n    } else {\r\n      setLoginstate(true);\r\n      setHeader(\"onHeader\");\r\n    }\r\n  };\r\n  const onclick2 = () => {\r\n    if (loginstate) {\r\n      setLoginstate(false);\r\n    }\r\n    if (biyongst) {\r\n      setLoginstate(false);\r\n    }\r\n    if (joinstate) {\r\n      setJoinstate(false);\r\n      setHeader(\"Header\");\r\n    } else {\r\n      setJoinstate(true);\r\n      setHeader(\"onHeader\");\r\n    }\r\n  };\r\n  const onclick3 = () => {\r\n    if (loginstate) {\r\n      setLoginstate(false);\r\n    }\r\n    if (joinstate) {\r\n      setJoinstate(false);\r\n    }\r\n    if (biyongst) {\r\n      setBiyongst(false);\r\n      setHeader(\"Header\");\r\n    } else {\r\n      setBiyongst(true);\r\n      setHeader(\"onHeader\");\r\n    }\r\n  };\r\n  const onclick4 = () => {\r\n    window.location.replace(\"/\");\r\n  };\r\n  const logout = () => {\r\n    window.sessionStorage.removeItem(\"id\");\r\n    window.location.replace(\"/\");\r\n  };\r\n  return (\r\n    <div className={header}>\r\n      <div className=\"homebutton\">\r\n        <GrHome onClick={onclick4}></GrHome>\r\n      </div>\r\n      <div className=\"title2\">\r\n        <p>서울시 커피직종 상권 분석</p>\r\n      </div>\r\n      <div className=\"actionbutton\">\r\n        {window.sessionStorage.getItem(\"id\") === null ? (\r\n          <>\r\n            <AiOutlineLogin onClick={onclick}></AiOutlineLogin>\r\n            <BsFillPersonPlusFill onClick={onclick2}></BsFillPersonPlusFill>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <FiLogOut onClick={logout}></FiLogOut>\r\n            <AiOutlineAudit onClick={onclick3}></AiOutlineAudit>\r\n          </>\r\n        )}\r\n      </div>\r\n      {loginstate ? <Login></Login> : <p></p>}\r\n      {joinstate ? <Join></Join> : <p></p>}\r\n      {biyongst ? (\r\n        <>\r\n          <div className=\"cancle\">\r\n            <FcCancel onClick={onclick3}></FcCancel>\r\n          </div>\r\n          <Biyong></Biyong>\r\n        </>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Map from \"../page/Map\";\r\nimport Header from \"../page/Header\";\r\nimport Login from \"../page/Login\";\r\n\r\n\r\nfunction Front() {\r\n  return (\r\n    <div className=\"Front\">\r\n      <Header></Header>\r\n      <Map></Map>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Front;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Front from \"./Front\";\r\n\r\nfunction Main(props) {\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <Front></Front>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./tem/Main\";\r\nimport { connect } from \"react-redux\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Main></Main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nReactDOM.render(\r\n  \r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/dong1.eccffac9.geojson\";"],"sourceRoot":""}